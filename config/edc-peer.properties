# EDC Peer Configuration Properties
edc.connector.name=edc-peer-connector
edc.connector.id=edc-peer

# Required IAM Configuration
edc.iam.issuer.id=test-issuer
edc.transfer.proxy.token.signer.privatekey.alias=test-signer
edc.transfer.proxy.token.verifier.publickey.alias=test-verifier

# Required IAM STS OAuth Configuration
edc.iam.sts.oauth.token.url=http://dummy-sts-url
edc.iam.sts.oauth.client.id=dummy-client-id
edc.iam.sts.oauth.client.secret.alias=dummy-client-secret-alias

# Required Tractus-X IAM Configuration
tx.iam.iatp.bdrs.server.url=http://dummy-bdrs-server-url

# Web Server Configuration - Use port 8181 to match working Docker configuration
edc.web.http.port=8181
edc.web.http.data.port=8081
edc.web.http.management.port=8181
edc.web.http.management.path=/api

# Control Plane Configuration
edc.controlplane.endpoint.url=http://edc-peer-control-plane:8181
edc.controlplane.endpoint.port=8181

# Data Plane Configuration
edc.dataplane.endpoint.url=http://edc-peer-data-plane:8081
edc.dataplane.endpoint.port=8081

# Storage Configuration (using in-memory for demo)
edc.storage.type=in-memory

# Authentication Configuration
edc.auth.type=none

# Policy Configuration
edc.policy.engine.type=in-memory

# Transfer Configuration
edc.transfer.type=http
edc.transfer.endpoint.url=http://edc-peer-transfer:8082
edc.transfer.proxy.token.signer.privatekey.alias=test-signer
edc.transfer.proxy.token.verifier.publickey.alias=test-verifier

# Catalog Configuration
edc.catalog.endpoint.url=http://edc-peer-catalog:8083

# Peer Integration Configuration
edc.peer.standalone.url=http://edc-control-plane.edc-standalone.svc.cluster.local:8181
edc.peer.standalone.id=edc-standalone

# Dummy value for edc.iam.sts.dim.url
edc.iam.sts.dim.url=http://dummy-dim-url 