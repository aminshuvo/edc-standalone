{{- if and .Values.monitoring.enabled .Values.monitoring.loki.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "edc-monitoring.monitoring.labels" . | nindent 4 }}
data:
  loki.yml: |
    auth_enabled: false

    server:
      http_listen_port: {{ .Values.monitoring.loki.service.port }}

    ingester:
      lifecycler:
        address: 127.0.0.1
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
        final_sleep: 0s
      chunk_idle_period: 5m
      chunk_retain_period: 30s
      wal:
        dir: /tmp/loki/wal

    schema_config:
      configs:
        - from: 2020-05-15
          store: boltdb
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h

    storage_config:
      boltdb:
        directory: /tmp/loki/index

      filesystem:
        directory: /tmp/loki/chunks

    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h

    chunk_store_config:
      max_look_back_period: 0s

    table_manager:
      retention_deletes_enabled: false
      retention_period: 0s

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "edc-monitoring.monitoring.labels" . | nindent 4 }}
    app: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      initContainers:
      - name: init-loki-dirs
        image: busybox:1.35
        command: ['sh', '-c', 'mkdir -p /tmp/loki/wal /tmp/loki/index /tmp/loki/chunks && chown -R 10001:10001 /tmp/loki']
        volumeMounts:
        - name: loki-storage
          mountPath: /tmp/loki
        securityContext:
          runAsUser: 0
      containers:
      - name: loki
        image: "{{ .Values.monitoring.loki.image.repository }}:{{ .Values.monitoring.loki.image.tag }}"
        imagePullPolicy: {{ .Values.monitoring.loki.image.pullPolicy }}
        args:
          - -config.file=/etc/loki/loki.yml
        ports:
        - containerPort: {{ .Values.monitoring.loki.service.port }}
        volumeMounts:
        - name: loki-config
          mountPath: /etc/loki
        - name: loki-storage
          mountPath: /tmp/loki
        resources:
          {{- toYaml .Values.monitoring.loki.resources | nindent 10 }}
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          runAsGroup: 10001
          fsGroup: 10001
      volumes:
      - name: loki-config
        configMap:
          name: loki-config
      - name: loki-storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "edc-monitoring.monitoring.labels" . | nindent 4 }}
    app: loki
spec:
  type: {{ .Values.monitoring.loki.service.type }}
  ports:
  - port: {{ .Values.monitoring.loki.service.port }}
    targetPort: {{ .Values.monitoring.loki.service.port }}
    protocol: TCP
    name: http
  selector:
    app: loki
{{- end }} 