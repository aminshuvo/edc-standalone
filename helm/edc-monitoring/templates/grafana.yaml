{{- if and .Values.monitoring.enabled .Values.monitoring.grafana.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "edc-monitoring.monitoring.labels" . | nindent 4 }}
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      url: http://prometheus:{{ .Values.monitoring.prometheus.service.port }}
      access: proxy
      isDefault: true
    - name: Loki
      type: loki
      url: http://loki:{{ .Values.monitoring.loki.service.port }}
      access: proxy

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-provider
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "edc-monitoring.monitoring.labels" . | nindent 4 }}
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      updateIntervalSeconds: 10
      allowUiUpdates: true
      options:
        path: /var/lib/grafana/dashboards/default

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "edc-monitoring.monitoring.labels" . | nindent 4 }}
data:
  edc-overview.json: |
    {
      "dashboard": {
        "id": null,
        "title": "EDC Overview",
        "tags": ["edc", "overview"],
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "EDC Pod Status",
            "type": "stat",
            "targets": [
              {
                "expr": "kube_pod_status_phase{namespace=\"edc-standalone\"}",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "thresholds": {
                  "steps": [
                    {"color": "red", "value": null},
                    {"color": "green", "value": 1}
                  ]
                }
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          }
        ],
        "time": {
          "from": "now-6h",
          "to": "now"
        },
        "refresh": "30s"
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "edc-monitoring.monitoring.labels" . | nindent 4 }}
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: "{{ .Values.monitoring.grafana.image.repository }}:{{ .Values.monitoring.grafana.image.tag }}"
        imagePullPolicy: {{ .Values.monitoring.grafana.image.pullPolicy }}
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: {{ .Values.monitoring.grafana.adminPassword | quote }}
        {{- if .Values.monitoring.grafana.disablePlugins }}
        - name: GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS
          value: "false"
        {{- end }}
        ports:
        - containerPort: {{ .Values.monitoring.grafana.service.port }}
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-dashboards-provider
          mountPath: /etc/grafana/provisioning/dashboards
        - name: grafana-dashboards
          mountPath: /var/lib/grafana/dashboards/default
        resources:
          {{- toYaml .Values.monitoring.grafana.resources | nindent 10 }}
      volumes:
      - name: grafana-storage
        emptyDir: {}
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboards-provider
        configMap:
          name: grafana-dashboards-provider
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "edc-monitoring.monitoring.labels" . | nindent 4 }}
    app: grafana
spec:
  type: {{ .Values.monitoring.grafana.service.type }}
  ports:
  - port: {{ .Values.monitoring.grafana.service.port }}
    targetPort: {{ .Values.monitoring.grafana.service.port }}
    protocol: TCP
    name: http
  selector:
    app: grafana
{{- end }} 